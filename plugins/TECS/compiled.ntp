module.exports=function($pending_plugins,$get_plugin){$pending_plugins.set('TECS',()=>{let plugin={metadata:{"name":"TECS","version":"0.1.2","description":"Threaded ECS architecture","main":"index.nt","author":"12Thanjo","dependancies":["structures"]}};let encodeStringBuffer=function(string){let bytes=string.length;var $arr_length=string.length;for(var i=0;i<$arr_length;i++){let code=string.charCodeAt(i);;if(code>127&&code<=2047){bytes+=1;}else if(code>2047&&code<=65535){bytes+=2;};if(code>=56320&&code<=57343){i-=1;};};let buffer=new SharedArrayBuffer(bytes);;let arrayBuffer=new Uint8Array(buffer);;let encoded=unescape(encodeURIComponent(string));;var $arr_length=encoded.length;for(var i=0;i<$arr_length;i++){arrayBuffer[i]=encoded[i].charCodeAt(0);};return buffer;};let decodeStringBuffer=function(buffer){let array=new Uint8Array(buffer);;let encodedString=String.fromCharCode.apply(null,array);;let decodedString=decodeURIComponent(escape(encodedString));;return decodedString;};let Thread=null;try{if(Worker!=null){Thread=Worker;}else{Thread=require('worker_threads').Worker;};}catch{Thread=require('worker_threads').Worker;};let types={"any":Array,"int8":Int8Array,"uint8":Uint8Array,"int16":Int16Array,"uint16":Uint16Array,"int32":Int32Array,"uint32":Uint32Array,"float32":Float32Array,"float64":Float64Array,"int64":BigInt64Array,"uint64":BigUint64Array};plugin.print=true;let create_text_style=function(color,backgroundColor){return "background-color: #"+(backgroundColor)+"; color: #"+(color)+";";};let log_colors={"Environment":"114422","Component":"551155","Query":"331155","System":"004455"};let log=function(type,name){if(plugin.print){let backgroundColor=log_colors[type];console.log("%c TECS | %c"+(type)+" %c"+(name)+" ",create_text_style("cccccc",backgroundColor),create_text_style("999999",backgroundColor),create_text_style("eebb11",backgroundColor));};};plugin.all=function(...conditionals){return (entity)=>{let pass=true;for(var[i,cond]of conditionals.entries()){if(typeof cond==="string"){if((entity.components.has(cond))==false){pass=false;break;};}else{if(cond(entity)==false){pass=false;break;};};};return pass;};};plugin.none=function(...conditionals){return (entity)=>{let pass=true;for(var[i,cond]of conditionals.entries()){if(typeof cond==="string"){if((entity.components.has(cond))){pass=false;break;};}else{if(cond()){pass=false;break;};};};return pass;};};plugin.some=function(...conditionals){return (entity)=>{let pass=false;for(var[i,cond]of conditionals.entries()){if(typeof cond==="string"){if((entity.components.has(cond))){pass=true;break;};}else{if(cond()){pass=true;break;};};};return pass;};};let Prop=function(type,auto){let $this=this;let private={};this.$op={};$this.type=type;if(auto==null){auto=0;};$this.auto=auto;};plugin.prop=function(type,auto){return new Prop(type,auto);};let num_CPUs=require('os').cpus().length-1;let Environment=function(id,config){let $this=this;let private={};this.$op={};Environment.$map.set(id,this);if(config==null){config={};};if(config.size==null){config.size=1000;};if(config.size>18446744073709552000){throw Error("Exceeded the entity limit (2^64)");};if(config.threads==null){config.threads=num_CPUs;};if(config.threads>num_CPUs){console.warn("TECS too many threads in Environment ("+(id)+")\ngot: ("+(config.threads)+"), max: ("+(num_CPUs)+")\ndefaulting to max");};private.id=id;Object.defineProperty(this, "id", {get: ()=>{return private.id;}});private.size=config.size;Object.defineProperty(this, "size", {get: ()=>{return private.size;}});private.threads=config.threads;Object.defineProperty(this, "threads", {get: ()=>{return private.threads;}});let self=$this;let self_priv=private;private.buffers={};$this.components={};let pointer_i=0;private.pointer={};$this.getPointer=function(entity_id){pointer_i=entity_id;return private.pointer;};let code='var types = {'+'"any": Array,'+'"int8": Int8Array, "uint8": Uint8Array,'+'"int16": Int16Array, "uint16": Uint16Array,'+'"int32": Int32Array, "uint32": Uint32Array,'+'"float32": Float32Array,'+'"float64": Float64Array,'+'"int64": BigInt64Array, "uint64": BigUint64Array,'+'};'+'var actions = new Map();'+'var components = {};'+'actions.set("component", (data)=>{'+'var recursive = function(buffer, target, target_parent, key){'+'if(buffer.type != null && buffer.type && typeof buffer.type == "string" && types[buffer.type]){'+'target_parent[key] = new types[buffer.type](buffer.buffer);'+'}else{'+'for(var key in buffer){'+'target[key] = {};'+'recursive(buffer[key], target[key], target, key);'+'}'+'}'+'};'+'recursive(data, components);'+'});'+'var queries = {};'+'actions.set("query", (data)=>{'+'queries[data.id] = new types[data.type](data.set);'+'});'+'var systems = {};'+'actions.set("system", (data)=>{'+'data.system = "systems[data.id] = " + data.system;'+'eval(data.system);'+'});'+'actions.set("run", (data)=>{'+'var system = systems[data.system];'+'var query = queries[data.query];'+'for(var i=data.min; i<data.max;i++){'+'system(query[i], components);'+'}'+'this.postMessage(data);'+'});'+'actions.set("log", ()=>{'+'console.log("components: ", components);'+'console.log("queries: ", queries);'+'console.log("systems: ", systems);'+'});'+'this.onmessage = function(e){'+'actions.get(e.data.type)(e.data.data);'+'};';let blob=new Blob([code]);;let obj_url=URL.createObjectURL(blob,{type:'text/javascript'});;if(config.threads>0){let {Queue}=$get_plugin('structures');private.scheduler={workers:[],free_workers:new Queue(),tasks:new Queue(),waiting_tasks:new Map()};Object.defineProperty(this, "scheduler", {get: ()=>{return private.scheduler;}});for(var i=0;i<private.threads;i++){let new_thread=new Thread(obj_url);;new_thread.i=i;new_thread.onmessage=function(e){private.scheduler.free_workers.push(private.scheduler.workers[new_thread.i]);let task=null;if(private.scheduler.waiting_tasks.has(e.data.system)){task=private.scheduler.waiting_tasks.get(e.data.system);}else{task=private.scheduler.tasks.peek();};task.finished-=1;if(task.finished==0){private.scheduler.waiting_tasks.delete(task.system);task.callback();};private.scheduler.run();};private.scheduler.workers.push(new_thread);private.scheduler.free_workers.push(new_thread);};private.scheduler.send_to_workers=function(type,data){let message={type:type,data:data};for(var[i,worker]of private.scheduler.workers.entries()){worker.postMessage(message);};};let Task=function(system,query,threads,size,callback){let $this=this;let private={};this.$op={};$this.system=system;$this.segments=new Queue();$this.callback=callback;$this.finished=threads;let mod=size%threads;let div=(size-mod)/threads;let iter=0;for(var i=0;i<threads;i++){let min=iter;iter+=div;if(mod>0){iter+=1;mod-=1;};$this.segments.push({system:system,query:query,min:min,max:iter});};};private.scheduler.run=function(){while(private.scheduler.free_workers.length>0&&private.scheduler.tasks.length>0){let worker=private.scheduler.free_workers.pop();;if(private.scheduler.tasks.peek().segments.length==0){let task=private.scheduler.tasks.pop();;private.scheduler.waiting_tasks.set(task.system,task);};if(private.scheduler.tasks.length>0){worker.postMessage({type:"run",data:private.scheduler.tasks.peek().segments.pop()});};};};private.scheduler.addTask=function(system,query,threads,size,callback){private.scheduler.tasks.push(new Task(system,query,threads,size,callback));private.scheduler.run();};};let Component=function(name,builder){let $this=this;let private={};this.$op={};Component.$map.set(name,this);private.name=name;$this.builder=builder;let recursive_component_create=function(builder,target){for(let key in builder){let value=builder[key];if(value instanceof Prop){let components=null;if(value.type!="any"){let Type=types[value.type];let buffer=new SharedArrayBuffer(Type.BYTES_PER_ELEMENT*self_priv.size);;target.buffers[key]={buffer:buffer,type:value.type};components=new Type(buffer);}else{components=new Array(self_priv.size);};target.components[key]=components;Object.defineProperty(target.pointer,key,{get:function(){return components[pointer_i];},set:function(val){components[pointer_i]=val;}});}else if(typeof value==="object"){target.buffers[key]={};target.components[key]={};target.pointer[key]={};recursive_component_create(value,{buffers:target.buffers[key],components:target.components[key],pointer:target.pointer[key]});}else{throw Error("Invalid Component Builder\n"+"\tEnvironment: ("+(self_priv.id)+")\n"+"\tComponent: ("+(private.name)+")");};};};let builder_obj={};builder_obj[private.name]=builder;recursive_component_create(builder_obj,{buffers:self_priv.buffers,components:self.components,pointer:self_priv.pointer});log("Component",name);};Component.$map=new Map();Component.get=function(id){return Component.$map.get(id);};Component.has=function(id){return Component.$map.has(id);};Component.forEach=function(cb){Component.$map.forEach(cb);};Component.delete=function(cb){Component.$map.delete(cb);};$this.createComponent=function(name,builder){new Component(name,builder);self_priv.scheduler.send_to_workers("component",self_priv.buffers);};private.entities=[];private.entity_id=0;private.removed=new Set();private.entity_lookup=new Map();let Entity=function(id,name){let $this=this;let private={};this.$op={};private.id=id;Object.defineProperty(this, "id", {get: ()=>{return private.id;}});private.name=name;Object.defineProperty(this, "name", {get: ()=>{return private.name;}});if(name!=null){self_priv.entity_lookup.set(name,$this);};$this.components=new Set();$this.getPointer=function(){return self.getPointer(id);};self_priv.entities[id]=$this;$this.bindComponent=function(component_id,...params){self.bindComponent($this,component_id,...params);};$this.hasComponent=function(component_id){return $this.component.has(component_id);};};$this.createEntity=function(name){let new_entity=null;if(private.removed.size==0){new_entity=new Entity(private.entity_id,name);private.entity_id+=1;}else{let entity_id=private.removed.values().next().value;private.removed.delete(entity_id);new_entity=new Entity(entity_id,name);};return new_entity;};$this.getEntity=function(name){return private.entity_lookup.get(name);};$this.bindComponent=function(entity_ref,component_id,...params){let entity_id=entity_ref.id;let entity=private.entities[entity_id];let component=Component.get(component_id);;entity.components.add(component_id);let recursive_i=0;let recursive=function(builder,target){for(let key in builder){let value=builder[key];if(value instanceof Prop){if(params[recursive_i]==null){target[key][entity_id]=value.auto;}else{target[key][entity_id]=params[recursive_i];};recursive_i+=1;}else{recursive(value,target[key]);};};};if(component.builder instanceof Prop){if(params[0]==null){$this.components[component_id][entity_id]=component.builder;}else{$this.components[component_id][entity_id]=params[0];};}else{recursive(component.builder,$this.components[component_id]);};Query.forEach((query)=>{query.audit(entity);});};$this.forEach=function(event){for(var[i,entity]of private.entities.entries()){event(entity);};};let SharedSet=function(){let $this=this;let private={};this.$op={};let type=null;private.bufferType="";Object.defineProperty(this, "bufferType", {get: ()=>{return private.bufferType;}});let size_multiply=1;if(self_priv.size<Math.pow(2,8)-1){type=Uint8Array;private.bufferType="uint8";size_multiply=Uint8Array.BYTES_PER_ELEMENT;}else if(self_priv.size<Math.pow(2,16)-1){type=Uint16Array;private.bufferType="uint16";size_multiply=Uint16Array.BYTES_PER_ELEMENT;}else if(self_priv.size<Math.pow(2,32)-1){type=Uint32Array;private.bufferType="uint32";size_multiply=Uint32Array.BYTES_PER_ELEMENT;}else{type=BigUint64Array;private.bufferType="uint64";size_multiply=BigUint64Array.BYTES_PER_ELEMENT;};$this.shared=new SharedArrayBuffer(self_priv.size*size_multiply);$this.array=new type($this.shared);private.i=1;$this.has=function(value){return $this.array.includes(value);};$this.add=function(value){if($this.has(value)==false){$this.array[private.i]=value;private.i+=1;$this.array[0]=private.i;};};$this.delete=function(value){for(var i=0;i<private.i;i++){if($this.array[i]==value){$this.array[i]=$this.array[private.i-1];private.i-=1;$this.array[0]=private.i;break;};};};$this.forEach=function(event){for(var i=0;i<private.i;i++){event($this.array[i]);};};Object.defineProperty($this,'length',{get:function(){return private.i-1;}});};private.queries={};Object.defineProperty(this, "queries", {get: ()=>{return private.queries;}});let Query=function(id,conditionals,threaded){let $this=this;let private={};this.$op={};Query.$map.set(id,this);private.id=id;Object.defineProperty(this, "id", {get: ()=>{return private.id;}});if(threaded==null){threaded=false;};if(threaded){$this.entities=new SharedSet();}else{$this.entities=new Set();};private.threaded=threaded;Object.defineProperty(this, "threaded", {get: ()=>{return private.threaded;}});$this.conditionals=conditionals;$this.audit=function(entity){if($this.conditionals(entity)){$this.entities.add(entity.id);}else{$this.entities.delete(entity.id);};};$this.remove=function(entity){$this.entities.delete(entity.id);};$this.forEach=function(event){$this.entities.forEach(event);};for(var[i,entity]of self_priv.entities.entries()){if(entity!=null){$this.audit(entity);};};if(threaded){self_priv.queries[id]=$this.entities.shared;self_priv.scheduler.send_to_workers("query",{id:id,set:$this.entities.shared,type:$this.entities.bufferType});}else{self_priv.queries[id]=$this.entities;};log("Query",id);};Query.$map=new Map();Query.get=function(id){return Query.$map.get(id);};Query.has=function(id){return Query.$map.has(id);};Query.forEach=function(cb){Query.$map.forEach(cb);};Query.delete=function(cb){Query.$map.delete(cb);};$this.createQuery=function(id,conditionals,threaded){new Query(id,conditionals,threaded);};let System=function(id,query,event){let $this=this;let private={};this.$op={};System.$map.set(id,this);private.query=Query.get(query);private.execute=function(list,min,max){for(var i=min;i<max+1;i++){event(list[i]);};};$this.run=function(callback,threads){if(threads==null){threads=0;};if(private.query.threaded==false||threads==0){private.query.forEach((entity)=>{event(entity,self.components);});callback();}else{self_priv.scheduler.addTask(id,private.query.id,threads,private.query.entities.length,callback);};};self_priv.scheduler.send_to_workers("system",{id:id,system:event.toString()});log("System",id);};System.$map=new Map();System.get=function(id){return System.$map.get(id);};System.has=function(id){return System.$map.has(id);};System.forEach=function(cb){System.$map.forEach(cb);};System.delete=function(cb){System.$map.delete(cb);};$this.createSystem=function(id,query,event){return new System(id,query,event);};log("Environment",id);};Environment.$map=new Map();Environment.get=function(id){return Environment.$map.get(id);};Environment.has=function(id){return Environment.$map.has(id);};Environment.forEach=function(cb){Environment.$map.forEach(cb);};Environment.delete=function(cb){Environment.$map.delete(cb);};plugin.Environment=Environment;let EventLoop=function(name){let $this=this;let private={};this.$op={};EventLoop.$map.set(name,this);private.name=name;Object.defineProperty(this, "name", {get: ()=>{return private.name;}});private.i=-1;private.queue=[];$this.add=function(event){private.queue.push(event);};let self=$this;$this.next=function(){private.i+=1;try{if(private.i<private.queue.length){private.queue[private.i](self.next);}else if(print){console.error("Attempted to go to the next event in an Event Loop when already at the end");};}catch(e){console.log(e);};};$this.start=function(){private.i=-1;$this.next();};};EventLoop.$map=new Map();EventLoop.get=function(id){return EventLoop.$map.get(id);};EventLoop.has=function(id){return EventLoop.$map.has(id);};EventLoop.forEach=function(cb){EventLoop.$map.forEach(cb);};EventLoop.delete=function(cb){EventLoop.$map.delete(cb);};{let Manager=function(systems,event){let $this=this;let private={};this.$op={};private.systems=systems;$this.done=function(){private.systems-=1;if(private.systems==0){event();};};};EventLoop.Manager=Manager;};plugin.EventLoop=EventLoop;return plugin;})};