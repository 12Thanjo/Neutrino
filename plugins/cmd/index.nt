// plugin: cmd
// description: command line interaction
// author: 12Thanjo


plugin.color = {
	black: "\x1b[30m", 
	red: "\x1b[31m",
	yellow: "\x1b[33m",
	green: "\x1b[32m",
	blue: "\x1b[34m",
	magenta: "\x1b[35m",
	cyan: "\x1b[36m",
	white: "\x1b[37m"
};

plugin.backgroundColor = {
	black: "\x1b[40m",
	red: "\x1b[41m",
	green: "\x1b[42m",
	yellow: "\x1b[43m",
	blue: "\x1b[44m",
	magenta: "\x1b[45m",
	cyan: "\x1b[46m",
	white: "\x1b[47m"
};

plugin.style = {
	reset: "\x1b[0m",
	bright: "\x1b[1m",
	dim: "\x1b[2m",
	underscore: "\x1b[4m",
	blink: "\x1b[5m",
	reverse: "\x1b[7m",
	hidden: "\x1b[8m"
};


local util = require('util');
plugin.input = function(event){
	util.inspect.defaultOptions.depth = null;
	//allows server admin to type commands into console
	process.stdin.setEncoding('utf8');
	process.stdin.on('readable', @()->{
	    local chunk = process.stdin.read();
	    // Use a loop to make sure we read all available data.
	    while(chunk != null){
	        chunk = process.stdin.read();
	        try{
	        	event(chunk);
	        }catch(e){
	            console.log("\x1b[31m" + e + "\x1b[37m\n");
	        };
	    };
	});
};


plugin.log = function(string, color, backgroundColor){
	string default "";
	color default "";
	backgroundColor default "";
	console.log(color + backgroundColor + string + plugin.color.white + plugin.backgroundColor.black + plugin.style.reset);
};

plugin.error = function(string){
	console.log(plugin.color.red + string + plugin.color.white + plugin.backgroundColor.black + plugin.style.reset);
};

plugin.specialLog = function(data){
	if(data typeof "string" == false){
		console.log(data);
		console.log();
	}else{
		if(isNaN(data) == false){//number
    		console.log(plugin.color.orange + data + plugin.color.white + "\n");
		}else{//string
			console.log(plugin.color.green + "'" + data + "'" + plugin.color.white + "\n");
		};
	};
};
