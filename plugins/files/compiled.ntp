module.exports=function($pending_plugins,$get_plugin){$pending_plugins.set('files',()=>{let plugin={metadata:{"name":"files","version":"0.1.1","description":"interaction with the file system - an expansion to the built in \"fs\" module","main":"index.nt","author":"12Thanjo","dependancies":["stats"]}};let stats=$get_plugin('stats');let fs=require('fs');;plugin.properties=function(path){let properties=fs.statSync(path);;return {size:properties.size,accessTime:properties.atimeMs,createTime:properties.ctimeMs,modifyTime:properties.mtimeMs,inodeNum:properties.ino};};plugin.readFile=function(path){return fs.readFileSync(path,'utf8');};plugin.writeFile=function(path,output){fs.writeFileSync(path,output);};plugin.deleteFile=function(path){fs.unlinkSync(path);};plugin.copyFile=function(path,destination){fs.copyFileSync(path,destination);};plugin.fileExists=function(path){return fs.existsSync(path);};plugin.createDirectory=function(path){try{fs.mkdirSync(path);}catch(e){if(e.message.substring(0,34)=="EEXIST: file already exists, mkdir"){console.info("Directory already exists ("+path+")");}else{throw new Error(e);};};};plugin.getFileExtention=function(path){let dot_index=path.lastIndexOf(".");;if(dot_index!=-1){let forward=path.lastIndexOf("/");;let backward=path.lastIndexOf("\\");;if(stats.max(dot_index,forward,backward)!=dot_index){return "";}else{return path.substring(dot_index+1);};}else{return "";};};plugin.getFileName=function(path){let forward=path.lastIndexOf("/");;let backward=path.lastIndexOf("\\");;return path.substring(stats.max(forward,backward)+1);};plugin.getFileNameWithoutExtention=function(path){let name=plugin.getFileName(path);;let ext=plugin.getFileExtention(path);;if(ext!=""){return name.slice(0,name.length-ext.length-1);}else{return name;};};plugin.normalize=function(path,forwards){if(forwards==null||forwards==false){return path.replaceAll("\\","/");}else{return path.replaceAll("/","\\");};};plugin.getFilePath=function(path){if(plugin.getFileExtention(path)!=""){return path.substring(0,plugin.normalize(path).lastIndexOf("/")+1);}else{return path;};};plugin.getFilePathUpDirectory=function(path,number){if(number==null){number=1;};if(plugin.getFileExtention(path)!=""){number+=1;};path=plugin.normalize(path);for(var i=0;i<number;i++){if(["/","\\"].includes(path[path.length-1])){path=path.substring(0,path.length-1);};path=path.substring(0,path.lastIndexOf("/")+1);};return path;};plugin.isDirectory=function(path){return fs.lstatSync(path).isDirectory();};plugin.renameFile=function(path,name){fs.renameSync(path,name);};plugin.deleteDirectory=function(path){if(fs.existsSync(path)){fs.readdirSync(path).forEach((file,index)=>{let current_path=(path)+"/"+(file);if(fs.lstatSync(current_path).isDirectory()){deleteDirectory(current_path);}else{fs.unlinkSync(current_path);};});fs.rmdirSync(path);};};plugin.getFiles=function(path,depth){if(depth==null){depth=Infinity;};return get_files_recursive(path,depth);};let get_files_recursive=function(path,depth){try{if(depth>-1){let output=[];fs.readdirSync(path,{withFileTypes:true}).forEach((file)=>{if(file.isFile()==false){output.push({name:file.name,type:"directory",dir:get_files_recursive(path+"/"+file.name,depth-1),properties:plugin.properties(path+"/"+file.name)});}else{output.push({name:plugin.getFileNameWithoutExtention(file.name),type:plugin.getFileExtention(file.name),properties:plugin.properties(path+"/"+file.name)});};});if(output.length!=0){return output;}else{return null;};}else{return null;};}catch(e){return {type:"error",name:e};};};return plugin;})};