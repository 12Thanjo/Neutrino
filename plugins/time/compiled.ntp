$pending_plugins.set('time',()=>{let plugin={};plugin.timer=function(duration,event){setTimeout(event,duration);};let AdvancedTimer=function(duration,event){let private={};private.timer=null;private.running=false;Object.defineProperty(this, "running", {get: ()=>{return private.running;}});private.paused=false;Object.defineProperty(this, "paused", {get: ()=>{return private.paused;}});private.start_time=0;private.replay_time=0;this.overlappable=false;private.duration=duration;Object.defineProperty(this,'duration',{get:function(){return private.duration;},set:function(val){private.duration=val;if(private.running){if(Date.now()-private.start_time>val){clearTimeout(private.timer);event();};};}});Object.defineProperty(this,'timeLeft',{get:function(){if(private.running){return private.duration-(Date.now()-private.start_time);}else{return 0;};}});this.start=function(){if(this.overlappable||this.running==false){if(private.replay_time==0){private.timer=setTimeout(event,duration);}else{private.timer=setTimeout(event,private.replay_time);private.replay_time=0;};private.running=true;private.paused=false;private.start_time=Date.now();}else{console.error('This AdvancedTimer is not overlappable');};};this.stop=function(){clearTimeout(private.timer);private.running=false;};this.restart=function(){this.stop();this.start();};this.pause=function(){this.stop();private.paused=true;private.replay_time=private.duration-(Date.now()-private.start_time);};};plugin.AdvancedTimer=AdvancedTimer;plugin.interval=function(duration,event){setInterval(event,duration);};let AdvancedInterval=function(duration,event){let private={};private.running=false;Object.defineProperty(this, "running", {get: ()=>{return private.running;}});private.duration=duration;private.timer=null;Object.defineProperty(this,'duration',{get:function(){return private.duration;},set:function(val){private.duration=val;if(private.running){console.log('changed');clearInterval(private.timer);private.timer=setInterval(event,private.duration);};}});this.start=function(){private.running=true;private.timer=setInterval(event,private.duration);};this.stop=function(){clearInterval(private.timer);private.running=false;};};plugin.AdvancedInterval=AdvancedInterval;plugin.metadata={"name":"time","version":"0.1.0","description":"advanced timings","main":"index.nt","author":"12Thanjo","dependancies":[]};return plugin;});