module.exports=function($pending_plugins,$get_plugin){$pending_plugins.set('steel',()=>{let plugin={metadata:{"name":"steel","version":"0.1.0","description":"a game engine written in neutrino","main":"index.nt","author":"12Thanjo","dependancies":["BABYLON","DOM","TECS","convert","convert"]}};
	let BABYLON=$get_plugin('BABYLON'); //5:7
	let DOM=$get_plugin('DOM'); //6:7
	let {prop,all,some,none}=$get_plugin('TECS');let TECS=$get_plugin('TECS'); //8:7
	let Engine=function(name,config){
		let $this=this;let private={};this.$op={};Engine.$map.set(name,this);
		private.name=name; //12:16 | index.nt
		Object.defineProperty(this, "name", {get: ()=>{return private.name;}}); //12:11 | index.nt
		let self=$this; //13:15 | index.nt
		if(config==null){config={};}; //16:11 | index.nt
		if(config.canvas==null){
			$this.canvas=DOM.createElement("canvas",document.body); //18:13 | index.nt
			$this.canvas.css({
				width:DOM.w,
				height:DOM.h
			}); //19:24 | index.nt
		}else{
			$this.canvas=DOM(config.canvas); //24:13 | index.nt
		}; //17:7 | index.nt
		if(config.fov==null){config.fov=75;}; //26:11 | index.nt
		if(config.shadowResolution==null){config.shadowResolution=2048;}; //27:11 | index.nt
		if(config.MSAA==null){config.MSAA=1;}; //28:11 | index.nt
		if(config.poll==null){config.poll=15.625;}; //29:11 | index.nt
		if(config.size==null){config.size=10000;}; //30:11 | index.nt
		if(config.threads==null){config.threads=require('os').cpus().length-1;}; //31:11 | index.nt
		if(config.create==null){config.create=()=>{
		};}; //33:11 | index.nt
		if(config.update==null){config.update=()=>{
		};}; //34:11 | index.nt
		if(config.render==null){config.render=()=>{
		};}; //35:11 | index.nt
		private.engine=new BABYLON.Engine($this.canvas.array[0].element,true,{
			preserveDrawingBuffer:true,
			stencil:true,
			disableWebGL2Support:false
		}); //40:12 | index.nt
		private.scene=new BABYLON.Scene(private.engine); //41:12 | index.nt
		private.camera=new BABYLON.FreeCamera("camera1",new BABYLON.Vector3(0,5,-10),private.scene); //42:18 | index.nt
		Object.defineProperty(this, "camera", {get: ()=>{return private.camera;}}); //42:11 | index.nt
		private.camera.setTarget(BABYLON.Vector3.Zero()); //43:29 | index.nt
		private.camera.fov=config.fov*0.0174; //44:12 | index.nt
		private.camera.minZ=0.1; //45:12 | index.nt
		private.scene.clearColor=new BABYLON.Color3(0.05,0.05,0.06); //48:12 | index.nt
		let light=new BABYLON.DirectionalLight("ambient light",new BABYLON.Vector3(-1,-2,-1),private.scene); //49:16 | index.nt
		light.position=new BABYLON.Vector3(20,40,20); //50:10 | index.nt
		light.intensity=0.6; //51:10 | index.nt
		private.shadowGenerator=new BABYLON.ShadowGenerator(config.shadowResolution,light); //54:12 | index.nt
		private.shadowGenerator.setDarkness(0.25); //55:40 | index.nt
		private.shadowGenerator.usePoissonSampling=true; //56:12 | index.nt
		let pipeline=new BABYLON.DefaultRenderingPipeline("default",true,private.scene,[private.camera]); //1:15 | post processing.ntm
		pipeline.fxaaEnabled=false; //4:9 | post processing.ntm
		pipeline.samples=1; //7:9 | post processing.ntm
		pipeline.sharpenEnabled=false; //10:9 | post processing.ntm
		pipeline.sharpen.edgeAmount=1.2; //11:9 | post processing.ntm
		pipeline.sharpen.colorAmount=1; //12:9 | post processing.ntm
		pipeline.depthOfFieldEnabled=false; //15:9 | post processing.ntm
		pipeline.depthOfFieldBlurLevel=1; //16:9 | post processing.ntm
		pipeline.depthOfField.focusDistance=2000; //17:9 | post processing.ntm
		pipeline.depthOfField.focalLength=50; //18:9 | post processing.ntm
		pipeline.depthOfField.fStop=1.4; //19:9 | post processing.ntm
		pipeline.bloomEnabled=false; //22:9 | post processing.ntm
		pipeline.bloomKernel=200; //23:9 | post processing.ntm
		pipeline.bloomWeight=0.8; //24:9 | post processing.ntm
		pipeline.bloomThreshold=0.2; //25:9 | post processing.ntm
		pipeline.bloomScale=0.7; //26:9 | post processing.ntm
		let curve=new BABYLON.ColorCurves(); //29:12 | post processing.ntm
		curve.globalHue=200; //30:6 | post processing.ntm
		curve.globalDensity=80; //31:6 | post processing.ntm
		curve.globalSaturation=80; //32:6 | post processing.ntm
		curve.highlightsHue=20; //33:6 | post processing.ntm
		curve.highlightsDensity=80; //34:6 | post processing.ntm
		curve.highlightsSaturation=-80; //35:6 | post processing.ntm
		curve.shadowsHue=2; //36:6 | post processing.ntm
		curve.shadowsDensity=80; //37:6 | post processing.ntm
		curve.shadowsSaturation=40; //38:6 | post processing.ntm
		pipeline.imageProcessing.colorCurves=curve; //39:9 | post processing.ntm
		pipeline.imageProcessing.colorCurvesEnabled=false; //40:9 | post processing.ntm
		pipeline.imageProcessing.toneMappingEnabled=false; //43:9 | post processing.ntm
		pipeline.imageProcessing.contrast=2; //44:9 | post processing.ntm
		pipeline.imageProcessing.exposure=2; //45:9 | post processing.ntm
		pipeline.imageProcessing.vignetteEnabled=true; //49:9 | post processing.ntm
		pipeline.imageProcessing.vignetteColor=new BABYLON.Color3(0,0,0); //50:9 | post processing.ntm
		pipeline.imageProcessing.vignetteWeight=2; //51:9 | post processing.ntm
		pipeline.grainEnabled=false; //55:9 | post processing.ntm
		pipeline.grain.intensity=40; //56:9 | post processing.ntm
		pipeline.grain.animated=true; //57:9 | post processing.ntm
		$this.pipeline={}; //63:5 | post processing.ntm
		Object.defineProperty($this.pipeline,'FXAA',{
			get:function(){ //67:18 | post processing.ntm
				return pipeline.fxaaEnabled; //68:15 | post processing.ntm
			},
			set:function(val){ //70:18 | post processing.ntm
				pipeline.fxaaEnabled=val; //71:17 | post processing.ntm
			}
		}); //66:22 | post processing.ntm
		Object.defineProperty($this.pipeline,'MSAA',{
			get:function(){ //78:18 | post processing.ntm
				return pipeline.samples; //79:15 | post processing.ntm
			},
			set:function(val){ //81:18 | post processing.ntm
				pipeline.samples=val; //82:17 | post processing.ntm
			}
		}); //77:22 | post processing.ntm
		$this.pipeline.sharpening={}; //89:5 | post processing.ntm
		Object.defineProperty($this.pipeline.sharpening,'enabled',{
			get:function(){ //91:18 | post processing.ntm
				return pipeline.sharpenEnabled; //92:15 | post processing.ntm
			},
			set:function(val){ //94:18 | post processing.ntm
				pipeline.sharpenEnabled=val; //95:17 | post processing.ntm
			}
		}); //90:22 | post processing.ntm
		Object.defineProperty($this.pipeline.sharpening,'edge',{
			get:function(){ //99:18 | post processing.ntm
				return pipeline.sharpen.edgeAmount; //100:15 | post processing.ntm
			},
			set:function(val){ //102:18 | post processing.ntm
				pipeline.sharpen.edgeAmount=val; //103:17 | post processing.ntm
			}
		}); //98:22 | post processing.ntm
		Object.defineProperty($this.pipeline.sharpening,'color',{
			get:function(){ //107:18 | post processing.ntm
				return pipeline.sharpen.colorAmount; //108:15 | post processing.ntm
			},
			set:function(val){ //110:18 | post processing.ntm
				pipeline.sharpen.colorAmount=val; //111:17 | post processing.ntm
			}
		}); //106:22 | post processing.ntm
		$this.pipeline.depthOfField={}; //117:5 | post processing.ntm
		Object.defineProperty($this.pipeline.depthOfField,'enabled',{
			get:function(){ //119:18 | post processing.ntm
				return pipeline.depthOfFieldEnabled; //120:15 | post processing.ntm
			},
			set:function(val){ //122:18 | post processing.ntm
				pipeline.depthOfFieldEnabled=val; //123:17 | post processing.ntm
			}
		}); //118:22 | post processing.ntm
		Object.defineProperty($this.pipeline.depthOfField,'strength',{
			get:function(){ //127:18 | post processing.ntm
				return pipeline.depthOfFieldBlurLevel; //128:15 | post processing.ntm
			},
			set:function(val){ //130:18 | post processing.ntm
				pipeline.depthOfFieldBlurLevel=val; //131:17 | post processing.ntm
			}
		}); //126:22 | post processing.ntm
		Object.defineProperty($this.pipeline.depthOfField,'focusDistance',{
			get:function(){ //135:18 | post processing.ntm
				return pipeline.depthOfField.focusDistance; //136:15 | post processing.ntm
			},
			set:function(val){ //138:18 | post processing.ntm
				pipeline.depthOfField.focusDistance=val; //139:17 | post processing.ntm
			}
		}); //134:22 | post processing.ntm
		Object.defineProperty($this.pipeline.depthOfField,'focalLength',{
			get:function(){ //143:18 | post processing.ntm
				return pipeline.depthOfField.focalLength; //144:15 | post processing.ntm
			},
			set:function(val){ //146:18 | post processing.ntm
				pipeline.depthOfField.focalLength=val; //147:17 | post processing.ntm
			}
		}); //142:22 | post processing.ntm
		Object.defineProperty($this.pipeline.depthOfField,'fStop',{
			get:function(){ //151:18 | post processing.ntm
				return pipeline.depthOfField.fStop; //152:15 | post processing.ntm
			},
			set:function(val){ //154:18 | post processing.ntm
				pipeline.depthOfField.fStop=val; //155:17 | post processing.ntm
			}
		}); //150:22 | post processing.ntm
		$this.pipeline.bloom={}; //161:5 | post processing.ntm
		Object.defineProperty($this.pipeline.bloom,'enabled',{
			get:function(){ //163:18 | post processing.ntm
				return pipeline.bloomEnabled; //164:15 | post processing.ntm
			},
			set:function(val){ //166:18 | post processing.ntm
				pipeline.bloomEnabled=val; //167:17 | post processing.ntm
			}
		}); //162:22 | post processing.ntm
		Object.defineProperty($this.pipeline.bloom,'kernel',{
			get:function(){ //171:18 | post processing.ntm
				return pipeline.bloomKernel; //172:15 | post processing.ntm
			},
			set:function(val){ //174:18 | post processing.ntm
				pipeline.bloomKernel=val; //175:17 | post processing.ntm
			}
		}); //170:22 | post processing.ntm
		Object.defineProperty($this.pipeline.bloom,'weight',{
			get:function(){ //179:18 | post processing.ntm
				return pipeline.bloomWeight; //180:15 | post processing.ntm
			},
			set:function(val){ //182:18 | post processing.ntm
				pipeline.bloomWeight=val; //183:17 | post processing.ntm
			}
		}); //178:22 | post processing.ntm
		Object.defineProperty($this.pipeline.bloom,'threshold',{
			get:function(){ //187:18 | post processing.ntm
				return pipeline.bloomThreshold; //188:15 | post processing.ntm
			},
			set:function(val){ //190:18 | post processing.ntm
				pipeline.bloomThreshold=val; //191:17 | post processing.ntm
			}
		}); //186:22 | post processing.ntm
		Object.defineProperty($this.pipeline.bloom,'scale',{
			get:function(){ //195:18 | post processing.ntm
				return pipeline.bloomScale; //196:15 | post processing.ntm
			},
			set:function(val){ //198:18 | post processing.ntm
				pipeline.bloomScale=val; //199:17 | post processing.ntm
			}
		}); //194:22 | post processing.ntm
		$this.pipeline.colorMap={}; //205:5 | post processing.ntm
		Object.defineProperty($this.pipeline.colorMap,'enabled',{
			get:function(){ //207:18 | post processing.ntm
				return pipeline.imageProcessing.colorCurvesEnabled; //208:15 | post processing.ntm
			},
			set:function(val){ //210:18 | post processing.ntm
				pipeline.imageProcessing.colorCurvesEnabled=val; //211:17 | post processing.ntm
			}
		}); //206:22 | post processing.ntm
		Object.defineProperty($this.pipeline.colorMap,'globalHue',{
			get:function(){ //215:18 | post processing.ntm
				return curve.globalHue; //216:15 | post processing.ntm
			},
			set:function(val){ //218:18 | post processing.ntm
				curve.globalHue=val; //219:14 | post processing.ntm
			}
		}); //214:22 | post processing.ntm
		Object.defineProperty($this.pipeline.colorMap,'globalDensity',{
			get:function(){ //223:18 | post processing.ntm
				return curve.globalDensity; //224:15 | post processing.ntm
			},
			set:function(val){ //226:18 | post processing.ntm
				curve.globalDensity=val; //227:14 | post processing.ntm
			}
		}); //222:22 | post processing.ntm
		Object.defineProperty($this.pipeline.colorMap,'globalSaturation',{
			get:function(){ //231:18 | post processing.ntm
				return curve.globalSaturation; //232:15 | post processing.ntm
			},
			set:function(val){ //234:18 | post processing.ntm
				curve.globalSaturation=val; //235:14 | post processing.ntm
			}
		}); //230:22 | post processing.ntm
		Object.defineProperty($this.pipeline.colorMap,'highlightsHue',{
			get:function(){ //239:18 | post processing.ntm
				return curve.highlightsHue; //240:15 | post processing.ntm
			},
			set:function(val){ //242:18 | post processing.ntm
				curve.highlightsHue=val; //243:14 | post processing.ntm
			}
		}); //238:22 | post processing.ntm
		Object.defineProperty($this.pipeline.colorMap,'highlightsDensity',{
			get:function(){ //247:18 | post processing.ntm
				return curve.highlightsDensity; //248:15 | post processing.ntm
			},
			set:function(val){ //250:18 | post processing.ntm
				curve.highlightsDensity=val; //251:14 | post processing.ntm
			}
		}); //246:22 | post processing.ntm
		Object.defineProperty($this.pipeline.colorMap,'highlightsSaturation',{
			get:function(){ //255:18 | post processing.ntm
				return curve.highlightsSaturation; //256:15 | post processing.ntm
			},
			set:function(val){ //258:18 | post processing.ntm
				curve.highlightsSaturation=val; //259:14 | post processing.ntm
			}
		}); //254:22 | post processing.ntm
		Object.defineProperty($this.pipeline.colorMap,'shadowsHue',{
			get:function(){ //263:18 | post processing.ntm
				return curve.shadowsHue; //264:15 | post processing.ntm
			},
			set:function(val){ //266:18 | post processing.ntm
				curve.shadowsHue=val; //267:14 | post processing.ntm
			}
		}); //262:22 | post processing.ntm
		Object.defineProperty($this.pipeline.colorMap,'shadowsDensity',{
			get:function(){ //271:18 | post processing.ntm
				return curve.shadowsDensity; //272:15 | post processing.ntm
			},
			set:function(val){ //274:18 | post processing.ntm
				curve.shadowsDensity=val; //275:14 | post processing.ntm
			}
		}); //270:22 | post processing.ntm
		Object.defineProperty($this.pipeline.colorMap,'shadowsSaturation',{
			get:function(){ //279:18 | post processing.ntm
				return curve.shadowsSaturation; //280:15 | post processing.ntm
			},
			set:function(val){ //282:18 | post processing.ntm
				curve.shadowsSaturation=val; //283:14 | post processing.ntm
			}
		}); //278:22 | post processing.ntm
		$this.pipeline.toneMap={}; //288:5 | post processing.ntm
		Object.defineProperty($this.pipeline.toneMap,'enabled',{
			get:function(){ //290:18 | post processing.ntm
				return pipeline.imageProcessing.toneMappingEnabled; //291:15 | post processing.ntm
			},
			set:function(val){ //293:18 | post processing.ntm
				pipeline.imageProcessing.toneMappingEnabled=val; //294:17 | post processing.ntm
			}
		}); //289:22 | post processing.ntm
		Object.defineProperty($this.pipeline.toneMap,'contrast',{
			get:function(){ //298:18 | post processing.ntm
				return pipeline.imageProcessing.contrast; //299:15 | post processing.ntm
			},
			set:function(val){ //301:18 | post processing.ntm
				pipeline.imageProcessing.contrast=val; //302:17 | post processing.ntm
			}
		}); //297:22 | post processing.ntm
		Object.defineProperty($this.pipeline.toneMap,'exposure',{
			get:function(){ //306:18 | post processing.ntm
				return pipeline.imageProcessing.exposure; //307:15 | post processing.ntm
			},
			set:function(val){ //309:18 | post processing.ntm
				pipeline.imageProcessing.exposure=val; //310:17 | post processing.ntm
			}
		}); //305:22 | post processing.ntm
		$this.pipeline.vignette={}; //316:5 | post processing.ntm
		Object.defineProperty($this.pipeline.vignette,'enabled',{
			get:function(){ //318:18 | post processing.ntm
				return pipeline.imageProcessing.vignetteEnabled; //319:15 | post processing.ntm
			},
			set:function(val){ //321:18 | post processing.ntm
				pipeline.imageProcessing.vignetteEnabled=val; //322:17 | post processing.ntm
			}
		}); //317:22 | post processing.ntm
		Object.defineProperty($this.pipeline.vignette,'color',{
			get:function(){ //326:18 | post processing.ntm
				return pipeline.imageProcessing.vignetteColor; //327:15 | post processing.ntm
			},
			set:function(val){ //329:18 | post processing.ntm
				pipeline.imageProcessing.vignetteColor=val; //330:17 | post processing.ntm
			}
		}); //325:22 | post processing.ntm
		Object.defineProperty($this.pipeline.vignette,'weight',{
			get:function(){ //334:18 | post processing.ntm
				return pipeline.imageProcessing.vignetteWeight; //335:15 | post processing.ntm
			},
			set:function(val){ //337:18 | post processing.ntm
				pipeline.imageProcessing.vignetteWeight=val; //338:17 | post processing.ntm
			}
		}); //333:22 | post processing.ntm
		$this.pipeline.filmGrain={}; //344:5 | post processing.ntm
		Object.defineProperty($this.pipeline.filmGrain,'enabled',{
			get:function(){ //346:18 | post processing.ntm
				return pipeline.grainEnabled; //347:15 | post processing.ntm
			},
			set:function(val){ //349:18 | post processing.ntm
				pipeline.grainEnabled=val; //350:17 | post processing.ntm
			}
		}); //345:22 | post processing.ntm
		Object.defineProperty($this.pipeline.filmGrain,'intensity',{
			get:function(){ //354:18 | post processing.ntm
				return pipeline.grain.intensity; //355:15 | post processing.ntm
			},
			set:function(val){ //357:18 | post processing.ntm
				pipeline.grain.intensity=val; //358:17 | post processing.ntm
			}
		}); //353:22 | post processing.ntm
		Object.defineProperty($this.pipeline.filmGrain,'animated',{
			get:function(){ //362:18 | post processing.ntm
				return pipeline.grain.animated; //363:15 | post processing.ntm
			},
			set:function(val){ //365:18 | post processing.ntm
				pipeline.grain.animated=val; //366:17 | post processing.ntm
			}
		}); //361:22 | post processing.ntm
		$this.pipeline.MSAA=config.MSAA; //76:9 | index.nt
		TECS.print=false; //2:5 | TECS.ntm
		$this.environment=new TECS.Environment(private.name,{
			size:config.size,
			threads:config.threads
		}); //4:5 | TECS.ntm
		$this.environment.createComponent("position",{
			x:prop("float64"),
			y:prop("float64"),
			z:prop("float64")
		}); //13:33 | TECS.ntm
		$this.environment.createComponent("scale",{
			x:prop("float64",1),
			y:prop("float64",1),
			z:prop("float64",1)
		}); //19:33 | TECS.ntm
		$this.environment.createComponent("rotation",{
			x:prop("float64"),
			y:prop("float64"),
			z:prop("float64")
		}); //25:33 | TECS.ntm
		$this.environment.createComponent("renderTarget",prop("any")); //31:33 | TECS.ntm
		$this.environment.createComponent("material",prop("any")); //32:33 | TECS.ntm
		$this.environment.createQuery("position",all("position","renderTarget")); //38:29 | TECS.ntm
		let position=$this.environment.createSystem("position","position",(id,components)=>{
			let render_position=components.renderTarget[id].position; //40:26 | TECS.ntm
			render_position.x=components.position.x[id]; //42:20 | TECS.ntm
			render_position.z=components.position.y[id]; //43:20 | TECS.ntm
			render_position.y=components.position.z[id]; //44:20 | TECS.ntm
		}); //39:15 | TECS.ntm
		$this.environment.createQuery("scale",all("scale","renderTarget")); //48:29 | TECS.ntm
		let scale=$this.environment.createSystem("scale","scale",(id,components)=>{
			let render_scale=components.renderTarget[id].scale; //50:23 | TECS.ntm
			render_scale.x=components.scale.x[id]; //52:17 | TECS.ntm
			render_scale.z=components.scale.y[id]; //53:17 | TECS.ntm
			render_scale.y=components.scale.z[id]; //54:17 | TECS.ntm
		}); //49:12 | TECS.ntm
		$this.environment.createQuery("rotation",all("rotation","renderTarget")); //58:29 | TECS.ntm
		let rotation=$this.environment.createSystem("rotation","rotation",(id,components)=>{
			components.rotation.z[id]%=Math.TAU; //62:15 | TECS.ntm
			components.rotation.x[id]%=Math.TAU; //63:15 | TECS.ntm
			components.rotation.y[id]%=Math.TAU; //64:15 | TECS.ntm
			components.renderTarget[id].rotationQuaternion=BABYLON.Quaternion.RotationYawPitchRoll(components.rotation.z[id],components.rotation.x[id],components.rotation.y[id]); //65:15 | TECS.ntm
		}); //59:15 | TECS.ntm
		{
			$this.materials={
				basic:{}
			}; //3:9 | materials.ntm
			let convert=$get_plugin('convert'); //6:11
			let Basic_Material=function(name,color){
				let $this=this;let private={};this.$op={};Basic_Material.$map.set(name,this);
				private.name=name; //10:20 | materials.ntm
				Object.defineProperty(this, "name", {get: ()=>{return private.name;}}); //10:15 | materials.ntm
				private.color=color; //11:21 | materials.ntm
				Object.defineProperty(this, "color", {get: ()=>{return private.color;}}); //11:15 | materials.ntm
				$this.mat=new BABYLON.StandardMaterial(name,private.scene); //13:13 | materials.ntm
				$this.mat.diffuseColor=new BABYLON.Color3(color[0],color[1],color[2]); //14:13 | materials.ntm
			}; //9:12 | materials.ntm
			Basic_Material.$map=new Map();Basic_Material.get=function(id){return Basic_Material.$map.get(id);};Basic_Material.has=function(id){return Basic_Material.$map.has(id);};Basic_Material.forEach=function(cb){Basic_Material.$map.forEach(cb);};Basic_Material.delete=function(cb){Basic_Material.$map.delete(cb);}; //9:12 | materials.ntm
			$this.bm=Basic_Material; //18:9 | materials.ntm
			$this.materials.basic.create=function(name,hex){ //21:42 | materials.ntm
				return new Basic_Material(name,convert.hexToRgb(hex)); //22:15 | materials.ntm
			}; //21:9 | materials.ntm
			$this.materials.basic.add=function(entity,material){ //25:40 | materials.ntm
				let mat=Basic_Material.get(material); //26:19 | materials.ntm
				entity.bindComponent("material",mat); //28:30 | materials.ntm
				let renderTarget=entity.getComponent("renderTarget"); //29:28 | materials.ntm
				renderTarget.material=mat.mat; //30:22 | materials.ntm
			}; //25:10 | materials.ntm
		}; //2:6 | materials.ntm
		$this.add={}; //2:5 | objects.ntm
		$this.environment.createComponent("box",prop("any",true)); //4:33 | objects.ntm
		$this.add.box=function(name,config){ //5:23 | objects.ntm
			if(config==null){config={};}; //6:11 | objects.ntm
			if(config.position==null){config.position={
				x:0,
				y:0,
				z:0
			};}; //7:11 | objects.ntm
			if(config.scale==null){config.scale={
				x:1,
				y:1,
				z:1
			};}; //12:11 | objects.ntm
			if(config.rotation==null){config.rotation={
				x:0,
				y:0,
				z:0
			};}; //17:11 | objects.ntm
			let mesh=new BABYLON.Mesh.CreateBox(name,1,private.scene); //24:15 | objects.ntm
			mesh.position.set(config.position.x,config.position.z,config.position.y); //25:22 | objects.ntm
			mesh.scaling.set(config.scale.x,config.scale.z,config.scale.y); //26:21 | objects.ntm
			mesh.rotationQuaternion=BABYLON.Quaternion.RotationYawPitchRoll(config.rotation.z,config.rotation.x,config.rotation.y); //27:9 | objects.ntm
			private.shadowGenerator.getShadowMap().renderList.push(mesh); //33:59 | objects.ntm
			mesh.receiveShadows=true; //34:9 | objects.ntm
			let entity=self.environment.createEntity(name); //38:17 | objects.ntm
			entity.bindComponent("renderTarget",mesh); //41:25 | objects.ntm
			entity.bindComponent("box"); //42:25 | objects.ntm
			return entity; //45:11 | objects.ntm
		}; //5:5 | objects.ntm
		$this.clearScene=function(){ //1:26 | load scene.ntm
			$this.environment.forEach((id,components)=>{
				let entity=$this.environment.getEntityById(id); //3:21 | load scene.ntm
				if(entity.components.has("renderTarget")){
					let render_target=components.renderTarget[id]; //6:32 | load scene.ntm
					render_target.dispose(); //7:34 | load scene.ntm
					components.renderTarget[id]=null; //8:23 | load scene.ntm
				}; //5:11 | load scene.ntm
				$this.environment.destroyEntity(id); //11:39 | load scene.ntm
			}); //2:29 | load scene.ntm
		}; //1:5 | load scene.ntm
		$this.loadScene=function(scene){ //19:25 | load scene.ntm
			$this.clearScene(); //20:20 | load scene.ntm
			for(let name in scene.entities){
				let entity=scene.entities[name];
				if(entity.type=="box"){
					$this.add.box(name,{
						position:entity.position,
						rotation:entity.rotation,
						scale:entity.scale
					}); //24:25 | load scene.ntm
				}; //23:11 | load scene.ntm
			}; //22:12 | load scene.ntm
		}; //19:5 | load scene.ntm
		private.fpsTimer=process.hrtime(); //1:8 | performance.ntm
		private.fpsMax=Infinity*-1; //2:14 | performance.ntm
		Object.defineProperty(this, "fpsMax", {get: ()=>{return private.fpsMax;}}); //2:7 | performance.ntm
		private.fpsMin=Infinity; //3:14 | performance.ntm
		Object.defineProperty(this, "fpsMin", {get: ()=>{return private.fpsMin;}}); //3:7 | performance.ntm
		private.fpsBoundsWaitCounter=120; //4:8 | performance.ntm
		private.fps=0; //5:11 | performance.ntm
		Object.defineProperty(this, "fps", {get: ()=>{return private.fps;}}); //5:7 | performance.ntm
		private.frameTime=0; //6:17 | performance.ntm
		Object.defineProperty(this, "frameTime", {get: ()=>{return private.frameTime;}}); //6:7 | performance.ntm
		private.tickindex=0; //10:8 | performance.ntm
		private.ticksum=0; //11:8 | performance.ntm
		private.ticklist=[1000]; //12:8 | performance.ntm
		private.ticklist_size=0; //13:8 | performance.ntm
		private.fpsAvg=0; //14:14 | performance.ntm
		Object.defineProperty(this, "fpsAvg", {get: ()=>{return private.fpsAvg;}}); //14:7 | performance.ntm
		let calc_average_tick=function(newtick){ //16:34 | performance.ntm
			if(private.ticklist_size==1000){
				private.ticksum-=private.ticklist[private.tickindex]; //18:16 | performance.ntm
			}else{
				private.ticklist_size+=1; //20:16 | performance.ntm
			}; //17:7 | performance.ntm
			private.ticksum+=newtick; //22:12 | performance.ntm
			private.ticklist[private.tickindex]=newtick; //23:12 | performance.ntm
			private.tickindex+=1; //24:12 | performance.ntm
			if(private.tickindex==1000){
				private.tickindex=0; //26:16 | performance.ntm
			}; //25:7 | performance.ntm
			if(private.ticklist_size==1000){
				return Math.floor(private.ticksum/1000); //31:15 | performance.ntm
			}else{
				return Math.floor(private.ticksum/private.ticklist_size); //33:15 | performance.ntm
			}; //30:7 | performance.ntm
		}; //16:24 | performance.ntm
		let calc_performance=function(){ //39:33 | performance.ntm
			let diff=process.hrtime(private.fpsTimer); //40:15 | performance.ntm
			private.frameTime=diff[0]*1000000000+diff[1]; //41:12 | performance.ntm
			private.fps=Math.floor(1000000000/private.frameTime); //42:12 | performance.ntm
			private.fpsAvg=calc_average_tick(private.fps); //44:12 | performance.ntm
			if(private.fpsBoundsWaitCounter==0){
				if(private.fps>private.fpsMax){private.fpsMax=private.fps}; //46:16 | performance.ntm
				if(private.fps<private.fpsMin){private.fpsMin=private.fps}; //47:16 | performance.ntm
			}else{
				private.fpsBoundsWaitCounter-=1; //49:16 | performance.ntm
			}; //45:7 | performance.ntm
			private.fpsTimer=process.hrtime(); //51:12 | performance.ntm
		}; //39:23 | performance.ntm
		let polling_rate=1/config.poll*1000; //85:23 | index.nt
		$this.animationScaling=function(value){ //86:36 | index.nt
			if(private.fps!=0){
				return value*polling_rate/private.fps; //88:19 | index.nt
			}else{
				return 0; //90:19 | index.nt
			}; //87:11 | index.nt
		}; //86:9 | index.nt
		config.create($this); //94:18 | index.nt
		private.update=new time.AdvancedInterval(config.poll,()=>{
			config.update($this); //98:22 | index.nt
		}); //97:12 | index.nt
		private.update.start(); //100:25 | index.nt
		private.event_loop=new TECS.EventLoop(private.name); //103:12 | index.nt
		private.event_loop.add((done)=>{
			position.run(()=>{
			}); //105:21 | index.nt
			scale.run(()=>{
			}); //106:18 | index.nt
			rotation.run(()=>{
			}); //107:21 | index.nt
		}); //104:27 | index.nt
		private.engine.runRenderLoop(()=>{
			calc_performance(); //112:25 | index.nt
			config.render($this); //113:22 | index.nt
			private.event_loop.start(); //115:33 | index.nt
			private.scene.render(); //117:32 | index.nt
		}); //111:33 | index.nt
		$this.getEngine=function(){ //120:29 | index.nt
			return private.engine; //121:15 | index.nt
		}; //120:9 | index.nt
		$this.destroy=function(){ //127:27 | index.nt
			$this.clearScene(); //128:24 | index.nt
			TECS.Environment.delete(private.name); //129:32 | index.nt
		}; //127:9 | index.nt
	}; //11:8 | index.nt
	Engine.$map=new Map();Engine.get=function(id){return Engine.$map.get(id);};Engine.has=function(id){return Engine.$map.has(id);};Engine.forEach=function(cb){Engine.$map.forEach(cb);};Engine.delete=function(cb){Engine.$map.delete(cb);}; //11:8 | index.nt
	plugin.Engine=Engine; //132:7 | index.nt
return plugin;})};