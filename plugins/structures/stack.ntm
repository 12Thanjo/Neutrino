scope {
	struct Node(data){
		this.data = data;
		this.next = null;
	};


	struct Stack(setup_arr){
		private.top = null;
		access length = 0;

		this.push = function(data){
			local new_top = new Node(data);
			new_top.next = private.top;
			private.top = new_top;
			private.length += 1;
		};

		this.pop = function(){
			if(private.length != 0){
				private.length -= 1;
				local output = private.top;
				private.top = private.top.next;
				return output.data;
			}else{
				return null;
			};
		};

		this.peek = function(){
			if(private.top != null){
				return private.top.data;
			}else{
				return null;
			};
		};

		this.print = function(){
			local output = [];
			local target = private.top;

			while(target != null){
				output.push(target.data);
				target = target.next;
			};

			return output;
		};


		if(setup_arr != null){
			local length = setup_arr.length - 1;
			iterate setup_arr(i, value){
				this.push(setup_arr[length - i]);
			};
		};
	};
	plugin.Stack = Stack;
};