$pending_plugins.set('multithread',()=>{let plugin={metadata:{"name":"multithread","version":"0.1.0","description":"multithreading","main":"index.nt","author":"12Thanjo","dependancies":[]}};let worker=null;try{if(Worker!=null){worker=Worker;}else{worker=require('worker_threads').Worker;};}catch{worker=require('worker_threads').Worker;};let Thread=function(event,callback){let private={};let str="let $event="+event.toString();;str+=";this.onmessage=(e)=>{this.postMessage($event(e.data));};";let blob=new Blob([str]);let obj_url=URL.createObjectURL(blob,{type:'text/javascript'});;let new_worker=new worker(obj_url);new_worker.onmessage=(e)=>{callback(e.data);};return new_worker;};plugin.Thread=Thread;let num_CPUs=require('os').cpus().length;let forAll=function(threads,event){let private={};if(threads>num_CPUs-1){console.error("there are only "+(num_CPUs-1)+" threads available | got "+(threads)+"\ndefualting to "+(num_CPUs)+" threads");threads=num_CPUs;};private.threads=[];private.data_set=[];private.output=[];private.callback=()=>{};private.data_set_length=0;private.data_set_i=-1;private.threads_left=threads;for(var i=0;i<threads;i++){let new_thread=new Thread(event,(e)=>{private.data_set_i+=1;private.data_set_length-=1;if(private.data_set_length>threads){private.data_set_length-=1;new_thread.postMessage({i:private.data_set_i,data:private.data_set[private.data_set_i]});private.output[e.i]=e.data;}else{private.output[e.i]=e.data;private.threads_left-=1;if(private.threads_left==0){private.callback(private.output);};};});private.threads.push(new_thread);};this.run=function(dataSet,callback){private.data_set=dataSet;private.output=[];private.callback=callback;private.data_set_length=dataSet.length;private.data_set_i=-1;private.threads_left=threads;for(var[i,thread]of private.threads.entries()){private.data_set_i+=1;thread.postMessage({i:private.data_set_i,data:private.data_set[private.data_set_i]});};};};let forEach=function(threads,event){let private={};if(threads==null){threads=num_CPUs-1;};if(threads>num_CPUs-1){console.error("there are only "+(num_CPUs-1)+" threads available | got ("+(threads)+")\n\tdefaulting to "+(num_CPUs-1)+" threads");threads=num_CPUs;};private.threads=[];private.data_set=[];private.output=[];private.event=()=>{};private.callback=()=>{};private.data_set_length=0;private.data_set_i=-1;private.threads_left=threads;for(var i=0;i<threads;i++){let new_thread=new Thread(event,(e)=>{private.data_set_i+=1;if(private.data_set_length>threads){private.data_set_length-=1;new_thread.postMessage({i:private.data_set_i,data:private.data_set[private.data_set_i]});private.event(e.i,e.data);}else{private.threads_left-=1;private.event(e.i,e.data);if(private.threads_left==0){private.callback(private.output);};};});private.threads.push(new_thread);};this.run=function(dataSet,event,callback){private.data_set=dataSet;private.event=event;private.callback=callback;let data_set_length=dataSet.length;private.data_set_length=data_set_length;private.data_set_i=-1;private.threads_left=threads;for(var[i,thread]of private.threads.entries()){private.data_set_i+=1;if(private.data_set_i<data_set_length){thread.postMessage({i:private.data_set_i,data:private.data_set[private.data_set_i]});}else{private.threads_left-=1;};};};};plugin.cluster={forAll:forAll,forEach:forEach};;return plugin;});